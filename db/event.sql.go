// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: event.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createEventQuery = `-- name: CreateEventQuery :one
INSERT INTO
    event (
    title,
    type,
    host_id,
    description,
    venue,
    tags,
    age_limit,
    start_time
    )
VALUES
   ($1, $2, $3, $4, $5, $6, $7, $8)
RETURNING
    title,
    type,
    host_id,
    description,
    venue,
    tags,
    age_limit,
    start_time
`

type CreateEventQueryParams struct {
	Title       string
	Type        EnumEventType
	HostID      uuid.UUID
	Description pgtype.Text
	Venue       pgtype.Text
	Tags        []string
	AgeLimit    pgtype.Int4
	StartTime   interface{}
}

type CreateEventQueryRow struct {
	Title       string
	Type        EnumEventType
	HostID      uuid.UUID
	Description pgtype.Text
	Venue       pgtype.Text
	Tags        []string
	AgeLimit    pgtype.Int4
	StartTime   interface{}
}

func (q *Queries) CreateEventQuery(ctx context.Context, db DBTX, arg CreateEventQueryParams) (CreateEventQueryRow, error) {
	row := db.QueryRow(ctx, createEventQuery,
		arg.Title,
		arg.Type,
		arg.HostID,
		arg.Description,
		arg.Venue,
		arg.Tags,
		arg.AgeLimit,
		arg.StartTime,
	)
	var i CreateEventQueryRow
	err := row.Scan(
		&i.Title,
		&i.Type,
		&i.HostID,
		&i.Description,
		&i.Venue,
		&i.Tags,
		&i.AgeLimit,
		&i.StartTime,
	)
	return i, err
}
